#!/bin/bash
################################################################################
#  ib_test_cores - measure InfiniBand latency and bandwidth between all 
#    cores on two nodes.   Running this in latency mode can reveal insights 
#    into processor package topology and background OS noise on compute 
#    nodes.
#
#  Glenn K. Lockwood and Rick Wagner                              January 2014
#  San Diego Supercomputer Center
################################################################################

#  Possible tests: 
#    ib_read_bw ib_read_lat
#    ib_send_bw ib_send_lat 
#    ib_write_bw ib_write_lat
#    dma_bw rdma_lat
#TEST_LIST="ib_read_bw ib_write_bw"
#TEST_LIST="ib_read_lat ib_write_lat"
TEST_LIST="ib_write_lat"

declare -A test_params
test_params[ib_read_lat]="--iters=5000 -s 4"
test_params[ib_write_lat]="--iters=5000 -s 4"
test_params[ib_read_bw]="--iters=5000 -s 4"
test_params[ib_write_bw]="--iters=5000 -s 4"

### SDSC systems
NUMACTL=/usr/bin/numactl
IBBIN=/usr/bin

### TACC Stampede
#NUMACTL=/usr/bin/numactl
#IBBIN=/opt/ofed/bin

DEVICE_LIST="mlx4_0"

################################################################################
if [ "z$1" == "z" ]; then
  echo "Syntax: $0 <remote host>" >&2
  exit 1
fi
server=`hostname | cut -d. -f1`
client=$1

serverdir="./$(basename $0).$$"
i=0
while [ -d "$1.$i" ]
do
  let "i++"
done
serverdir="$1.$i"
mkdir -v $serverdir

### Start logfile
LOG=$serverdir/log.txt
cp $1 $LOG

### output device info
IBSBIN=$(sed -e 's/bin/sbin/' <<< $IBBIN)
echo '================================================================================' >> $LOG
for device in $DEVICE_LIST
do
  echo '--------------------------------------------------------------------------------' >> $LOG
  echo "Device info for $server:$device" >> $LOG
  $IBSBIN/ibstatus $device >> $LOG 2>&1
  echo '--------------------------------------------------------------------------------' >> $LOG
  echo "Device info for $client:$device" >> $LOG
  ssh $client "$IBSBIN/ibstatus $device" >> $LOG 2>&1
done

### run the actual test
echo -n "Running test on $server at " >> $LOG
echo  `date`  >> $LOG

### loop over all benchmarks
for test in $TEST_LIST
do
  echo -n "Running $test to $client at" >> $LOG
  echo `date` >> $LOG
  ### loop over all devices
  for device in $DEVICE_LIST
  do
    ### loop over core combinations
    for corel in $(seq 0 15)
    do
      for corer in $(seq 0 15)
      do
        output=$serverdir/$client.$device.$test.$corel-$corer
        ### start test daemon on $server
        $NUMACTL --physcpubind=$corel $IBBIN/$test ${test_params[$test]} -d $device &
        sleep 1
        ### launch test on $client
        echo "Trying core $corel - $corer"
        ssh $client "$NUMACTL --physcpubind=$corer $IBBIN/$test ${test_params[$test]} -d $device $server" >& $output
        ### generate list of data (CSV) from test output
        awk '/^[[:digit:]]*, [^ ]*$/ { print }' $output >> $serverdir/$test.csv
      done
    done
  done
done

wait
